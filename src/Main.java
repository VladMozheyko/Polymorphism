public class Main {

    /*
    Полиморфизм(многоформие) - прием ООП, который подразумевает создание методов с одинаковым названием, но с разными
    входными параметрами, таким образом появляется возможность перегрузить это название и вызывать разные участки кода
    в зависимости от потребностей, просто передав соответсвующий набор параметров.
    Рассмотрим пример 1. В нем мы лаконично использовали название метода, но мы могли бы не пользоваться полиморфизмом,
    т.к. мы не скованы в выборе названий.
    А при создании объекта класса мы можем создавать конструкторы только такого же названия как и класс, соответственно
    при необходимости создавать разные виды объектов этого класса невозможно обойтись без перегрузки конструктора.
    Таким образом основным назначением полиморфизма является перегрузка конструкторов класса.
     */

    /*
    Пример 1
    В геометрии периметром называется сумма всех сторон фигуры. Создадим методы, для вычисления периметра треугольника и
    прямоугольника. Удобно будет оба метода назвать perimetr, но как компилятор поймет какой метод мы вызываем?
    Мы будем передавать в каждую версию метода индвидуальный набор параметров
     */

    public static void main(String[] args) {
      System.out.println("Периметр треугольника: " + perimetr(3, 4, 5));        // Полиморфные методы
      System.out.println("Периметр прямоугольника: " + perimetr(3, 4));
      Car car = new Car();                                                // Полиморфные объекты
      Car car1 = new Car(10000, 200, "Volkswagen");
    }

    public static double perimetr(double a, double b, double c){
        return a+b+c;
    }

    public static double perimetr(double a, double b){
        return 2*(a+b);
    }
}
